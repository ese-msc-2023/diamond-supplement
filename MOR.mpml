<?xml version='1.0' encoding='utf-8'?>
<icferst_options>
  <simulation_name>
    <string_value lines="1">z_ME2</string_value>
  </simulation_name>
  <porous_media_simulator/>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="TutorialME">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <simulation_quality>
      <string_value>balanced</string_value>
    </simulation_quality>
  </geometry>
  <solver_options>
    <Non_Linear_Solver>
      <integer_value rank="0">20</integer_value>
      <Fixed_Point_Iteration>
        <real_value rank="0">5e-2</real_value>
        <Infinite_norm_tol>
          <real_value rank="0">0.03</real_value>
          <adaptive_non_linear_iterations>
            <integer_value rank="0">1</integer_value>
          </adaptive_non_linear_iterations>
        </Infinite_norm_tol>
        <Backtracking_factor>
          <real_value rank="0">-10</real_value>
        </Backtracking_factor>
        <Vanishing_relaxation>
          <real_value rank="0">0</real_value>
          <Vanishing_for_transport>
            <real_value rank="0">-1e2</real_value>
          </Vanishing_for_transport>
        </Vanishing_relaxation>
        <adaptive_timestep_nonlinear>
          <integer_value rank="0">4</integer_value>
          <PID_controller>
            <Aim_num_FPI>
              <integer_value rank="0">5</integer_value>
            </Aim_num_FPI>
          </PID_controller>
          <ensure_solvers_convergence/>
          <max_timestep>
            <constant>
              <real_value rank="0">3153600000</real_value>
              <comment>100 Y = 3153600000
1M Y =  31536000000000
10M Y = 3.1536E+14</comment>
            </constant>
          </max_timestep>
          <min_timestep>
            <constant>
              <real_value rank="0">3153600</real_value>
            </constant>
          </min_timestep>
        </adaptive_timestep_nonlinear>
      </Fixed_Point_Iteration>
    </Non_Linear_Solver>
  </solver_options>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">1</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <Show_Convergence/>
    <dump_boundaryflux>
      <surface_ids>
        <integer_value rank="1" shape="4">1</integer_value>
      </surface_ids>
    </dump_boundaryflux>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">864000</real_value>
      <comment>259200 = 3 days</comment>
    </timestep>
    <finish_time>
      <real_value rank="0">3.1536E+14</real_value>
      <comment>3.1536E+09= 100 years
10M Y = 3.1536E+14</comment>
    </finish_time>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">9.81</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="1" dim1="dim" shape="3">0 0 -1</real_value>
            </constant>
          </value>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="Water">
    <phase_properties>
      <Density>
        <python_state>
          <algorithm name="scalar_python_diagnostic">
            <string_value type="code" language="python" lines="20">Temperature = state.scalar_fields["Temperature"]
Pressure = state.scalar_fields["Pressure"]

#Loop over all the nodes of the input field
for i in range(field.node_count):
 T = Temperature.node_val(i)
 P = Pressure.node_val(i)
 
 #Formula
 if T &lt; 574:
  val1 = -0.0023328201*T**2 + 1.0869580055*T + 887.5914
 elif T &lt; 654:
  val1 = -0.0011226938*T**3 + 2.0306323768*T**2 - 1226.3606196862*T + 247972.46816223
 elif T &lt; 663:
  val1 = 0.419319282558*T**3 - 829.57097709631*T**2 + 547043.792559283*T - 120240161.260508
 else:
  val1 = 0.000000000000014562424658156*T**6 - 0.0000000000988236015638392*T**5 + 0.00000027707846321561*T**4 - 0.000410860340056467*T**3 + 0.339957993811653*T**2 - 148.992636402535*T + 27135.6537310957
 density =  val1
 #Assign the field
 field.set( i, density )</string_value>
          </algorithm>
        </python_state>
        <boundary_conditions name="oceanfloor">
          <surface_ids>
            <integer_value rank="1" shape="2">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">1010</real_value>
            </constant>
          </type>
        </boundary_conditions>
      </Density>
      <Viscosity>
        <tensor_field name="Viscosity" rank="2">
          <diagnostic>
            <algorithm name="tensor_python_diagnostic" material_phase_support="single">
              <string_value type="code" language="python" lines="20">Temperature = state.scalar_fields["Temperature"]

#Loop over all the nodes of the input field
for i in range(field.node_count):
 c = Temperature.node_val(i)
 
 #Formula
 if c &lt; 661:
  val = (1.1993291118785E-17)*(c)**6-(3.67231400250083E-14)*(c)**5+(4.64471272045802E-11)*(c)**4-(3.10772437406024E-08)*(c)**3+(1.16128996347359E-05)*(c)**2-(2.30191602207259E-03)*(c)+0.189765428960157
 else:
  val = (3.004344905E-21)*(c)**6-(1.9773083587236E-17)*(c)**5+(5.36391646705641E-14)*(c)**4-(7.67355019144351E-11)*(c)**3+(6.10274937760403E-8)*(c)**2-(2.55324715090733E-5)*(c)+0.00440917759095297
 viscosity =  [[val, 0, 0],[0, val, 0], [0, 0, val]]
 #Assign the field
 field.set( i, viscosity )</string_value>
            </algorithm>
            <mesh name="PressureMesh"/>
            <stat>
              <include_in_stat/>
            </stat>
          </diagnostic>
        </tensor_field>
        <viscosity_scheme>
          <tensor_form/>
          <nonlinear_scheme/>
        </viscosity_scheme>
      </Viscosity>
      <tensor_field name="Thermal_Conductivity" rank="2">
        <prescribed>
          <value name="WholeMesh">
            <isotropic>
              <constant>
                <real_value rank="0">0.6</real_value>
              </constant>
            </isotropic>
          </value>
          <output/>
        </prescribed>
      </tensor_field>
      <scalar_field name="HeatCapacity" rank="0">
        <prescribed>
          <value name="WholeMesh">
            <constant>
              <real_value rank="0">4950</real_value>
            </constant>
          </value>
          <stat/>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </scalar_field>
    </phase_properties>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="PressureMesh"/>
        <hydrostatic_boundaries/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">1e7</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="oceanfloor">
          <surface_ids>
            <integer_value rank="1" shape="2">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">25000000</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">1e5</real_value>
                  </constant>
                </value>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
        <consistent_interpolation/>
        <output/>
      </prognostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="3">0 0 0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="noflow">
          <surface_ids>
            <integer_value rank="1" shape="5">2 3 4 5 6</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <galerkin_projection>
          <discontinuous/>
        </galerkin_projection>
        <output/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="Temperature">
      <prognostic>
        <mesh name="PressureMesh"/>
        <Impose_min_max>
          <min_limit>
            <real_value rank="0">275</real_value>
          </min_limit>
          <automatic_max_limit/>
        </Impose_min_max>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">275</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="seafloor">
          <surface_ids>
            <integer_value rank="1" shape="2">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly>
              <boundary_overwrites_initial_condition/>
            </apply_weakly>
            <constant>
              <real_value rank="0">275</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <boundary_conditions name="1200C">
          <surface_ids>
            <integer_value rank="1" shape="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly>
              <boundary_overwrites_initial_condition/>
            </apply_weakly>
            <python>
              <string_value type="code" language="python" lines="20">def val(X,t):
 import math
 #X =0; Y = 1; Z = 2;
 T=1200*math.exp(-(X[0]/1200)**2)+273
 return T</string_value>
            </python>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">5</real_value>
                  </constant>
                </value>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
        <galerkin_projection>
          <continuous>
            <solver/>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="PhaseVolumeFraction">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">1</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="all">
          <surface_ids>
            <integer_value rank="1" shape="9">1 2 3 4 5 6</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">1</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Dummy">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
  <mesh_adaptivity>
    <hr_adaptivity>
      <period_in_timesteps>
        <constant>
          <integer_value rank="0">3</integer_value>
        </constant>
      </period_in_timesteps>
      <maximum_number_of_nodes>
        <integer_value rank="0">3000000</integer_value>
      </maximum_number_of_nodes>
      <minimum_number_of_nodes>
        <per_process/>
        <integer_value rank="0">30</integer_value>
      </minimum_number_of_nodes>
      <enable_gradation>
        <gradation_parameter>
          <real_value rank="0">3</real_value>
        </gradation_parameter>
      </enable_gradation>
      <tensor_field name="MinimumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="3 3">30 0 0 0 30 0 0 0 30</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
      <tensor_field name="MaximumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="3 3">150 0 0 0 150 0 0 0 150</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
      <preserve_mesh_regions/>
    </hr_adaptivity>
  </mesh_adaptivity>
  <porous_media>
    <scalar_field name="Porosity">
      <prescribed>
        <mesh name="P0DG"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">0.1</real_value>
          </constant>
        </value>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <output/>
      </prescribed>
    </scalar_field>
    <tensor_field name="Permeability">
      <prescribed>
        <mesh name="P0DG"/>
        <value name="WholeMesh">
          <isotropic>
            <constant>
              <real_value rank="0">5E-14</real_value>
            </constant>
          </isotropic>
        </value>
        <output/>
      </prescribed>
    </tensor_field>
    <porous_properties>
      <scalar_field name="porous_density">
        <prescribed>
          <mesh name="P0DG"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="0">2900</real_value>
            </constant>
          </value>
          <stat/>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
          <output>
            <exclude_from_vtu/>
          </output>
        </prescribed>
      </scalar_field>
      <scalar_field name="porous_heat_capacity">
        <prescribed>
          <mesh name="P0DG"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="0">1000</real_value>
            </constant>
          </value>
          <stat/>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
          <output/>
        </prescribed>
      </scalar_field>
      <tensor_field name="porous_thermal_conductivity">
        <prescribed>
          <mesh name="P0DG"/>
          <value name="WholeMesh">
            <isotropic>
              <constant>
                <real_value rank="0">2.4</real_value>
              </constant>
            </isotropic>
          </value>
          <output/>
        </prescribed>
      </tensor_field>
    </porous_properties>
  </porous_media>
  <numerical_methods>
    <do_not_bound_after_adapt/>
  </numerical_methods>
</icferst_options>
